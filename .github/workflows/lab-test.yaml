name: Lab test
on:
  push:
    branches: [ main ]
    paths:
    - 'kubernetes/llama-stack/**'
    - 'kubernetes/notebooks/**'
    - 'demos/rag_agentic/**'
    - 'kubernetes/kustomize/**'
  pull_request:
    branches: [ main ]
    paths:
    - 'kubernetes/llama-stack/**'
    - 'kubernetes/notebooks/**'
    - 'demos/rag_agentic/**'
    - 'kubernetes/kustomize/**'
jobs:
  lab-test:
    runs-on: ubuntu-latest
    environment: ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: install oc client
        run: |
          curl -LO https://downloads-openshift-console.apps.ocp-beta-test.nerc.mghpcc.org/amd64/linux/oc.tar
          tar -xvf oc.tar
          sudo mv oc /usr/local/bin/
          sudo chmod +x /usr/local/bin/oc

      - name: Login to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}

      - name: Create project
        run: |
          oc new-project lab-test

      - name: annotate the namespace with member of istio
        run: |
          oc annotate namespace lab-test maistra.io/member-of=istio-system

      - name: create slack secret
        run: |
          oc create secret generic slack-secret --from-literal=slack-team-id=${{ secrets.SLACK_TEAM_ID }} --from-literal=llama-token=${{ secrets.LLAMA_TOKEN }} --from-literal=slack-bot-token=${{ secrets.SLACK_BOT_TOKEN }}  -n lab-test

      - name: deploy components
        run: |
          oc apply -k kubernetes/kustomize/overlay/ci -n lab-test

      - name: wait for deployment
        run: |
          oc rollout status deployment/llamastack-deployment -n lab-test

      - name: wait for lab pod to be created then wait for it to be ready
        run: |
          timeout 300 bash -c 'while ! oc get pod lab-0 >/dev/null 2>&1; do echo "Waiting for pod lab to be created..."; sleep 5; done' && echo "Pod lab created!" || (echo "Timeout waiting for pod creation" && exit 1)
          oc wait --for=condition=Ready pod -l app=lab -n lab-test --timeout=300s

      - name: exec into the lab-0 pod and run sed
        run: |
          oc exec $(oc get pods -l app=lab -n lab-test -o jsonpath='{.items[0].metadata.name}') -- sed -i 's/TAVILY_SEARCH_API_KEY= ""/TAVILY_SEARCH_API_KEY= ${{ secrets.TAVILY }}/g' .env

      - name: delete project
        if: always()
        run: |
          oc delete project lab-test
